package repository

import (
	"context"
	"fmt"
	"time"

	"github.com/jmoiron/sqlx"
	_ "github.com/lib/pq"
)

func PostgreSQLDB(dsn string, ctx context.Context) (*sqlx.DB, error) {
	ctx, cancel := context.WithTimeout(ctx, 5*time.Second)
	defer cancel()

	db, err := sqlx.ConnectContext(ctx, "postgres", dsn)
	if err != nil {
		return nil, fmt.Errorf("sqlx.ConnectContext(): %s", err)
	}

	if err := createTables(db); err != nil {
		return nil, fmt.Errorf("createTables(): %s", err)
	}

	return db, nil
}

func createTables(db *sqlx.DB) error {
	query := `
		CREATE TABLE IF NOT EXISTS links(
			ID integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
			active_link VARCHAR(512),
			history_link VARCHAR(512)
		)
	`

	if _, err := db.Exec(query); err != nil {
		return err
	}

	return nil
}
